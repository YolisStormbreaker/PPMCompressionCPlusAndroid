package com.yolis.firstnativecapp


import junit.framework.Assert.assertEquals
import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream
import org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream
import org.junit.Assert
import org.junit.Assert.assertArrayEquals
import org.junit.Test
import java.io.ByteArrayInputStream
import java.io.ByteArrayOutputStream
import java.nio.charset.Charset
import java.util.zip.*
import kotlin.math.abs
import kotlin.random.Random

class Bzip2Tests {

    val TEXT_DEFAULT_CHARSET_NAME = "windows-1251"
    val TEXT_DEFAULT_CHARSET = Charset.forName(TEXT_DEFAULT_CHARSET_NAME)


    fun ByteArray.toHexString() = "0x${if (size > 0) joinToString("") { "%02x".format(it).toUpperCase()} else "00"}"

	val testsStrings = arrayOf(

		"Где он может быть наедине.",
		"Они перестали любить стороны.",
		"Спустя некоторое время после свадьбы.",
		"Каждый из них менее продолжительный и где он может.",
		"Другу у молодых родителей ни для каждой из таких семей.",
		"Которое никому нельзя рассказывать стороны они только привыкают.",
		"Существует, то возникают противоречия в природе не существует, то возникают противоречия.",
		"Большинство разводов пространство, где ему свои взгляды на жизнь, традициях и сокровенное.",
		"Психологическом комфорте взаимные упреки кроме телесного, каждый маленькое и ценностях захочет рассказать.",
		"Исполнять каждый после свадьбы у которых супруги испытывают трудности. На вещи чувства уже не те, что ему нравится.",
		"Во время после свадьбы у всех есть свое маленькое и ценностях. Только привыкают друг к захочет рассказать, расскажет сам, а.",
		"Считается кризисным из-за того, что если. Время после свадьбы у молодых людей пропадает сильное чувство влюбленности, которое никому.",
		"Двумя молодыми людьми стоит вдвое труднее. Чувство влюбленности, которое никому нельзя рассказывать. Боятся, что супруги привыкают друг.",
		"Вести свой быт, полностью обеспечивают себя сами уникальна, со своим устоем. Замечательно, в этом опасный, и это можно выделить пять критических периодов.",
		"Жизнь, традициях и психологическом комфорте приведут к другу. Ненужным ссорам. а это, согласитесь, понравится не существует супруга рассказывали вам абсолютно.",
		"Заняться тем, что наедине с одной стороны. Страстные отношения телесного, каждый обеспечивают себя. Сложились не раз было сказано, что ему свои взгляды на жизнь традициях.",
		"Разобраться в привычках, взглядах на. Которые должен исполнять каждый из супругов стремится. Кроме телесного, каждый это, согласитесь, понравится не существует, то возникают противоречия.",
		"Служат первые семейные ссоры и психологическом комфорте задача: с периодами. Через определенные сроки совместной жизни тем. Никто не семья по-своему уникальна, со своим устоем, бытом взаимоотношениями.",
		"Перед двумя молодыми людьми стоит вдвое труднее задача: с периодами кризиса совпадает. Привыкания друг к другу, узнают особенности своей второй половинки сильное. Совершенно одинаковых людей не будет секретом.",
		"Рождением малыша своим устоем, бытом, взаимоотношениями свадьбы. Семей, у которых супруги привыкают друг. Своей второй причиной служат первые семейные ссоры. Или супруга рассказывали вам абсолютно все замечательно, в роль.",
		"То возникают противоречия в браке самый опасный, и психологическом комфорте рассказать расскажет. Ими раньше семьи начинают распределять обязанности, которые должен исполнять. Рано или просто отдохнуть сроки совместной жизни.",
		"Если молодожены обеспечены собственным жильем, процесс привыкания. – вживаются в роль молодых людей пропадает сильное чувство влюбленности, которое овладевало. Процесс привыкания друг к другу. Свои взгляды на вещи перед двумя молодыми людьми.",
		"Осложнение семейного кризиса через определенные сроки совместной жизни. Определенные сроки совместной жизни факт, что если их чувства. Были раньше, значит, они начинают самостоятельно вести свой. Где он захочет рассказать, расскажет сам, а лишние расспросы приведут.",
		"Были раньше, значит, они только привыкают друг к другу у всех есть. Периодами кризиса через определенные сроки совместной. Некоторое время которых все замечательно. Молодыми людьми стоит вдвое труднее задача. Молодожены обеспечены собственным жильем, процесс привыкания друг к другу.",
		"Постараемся разобраться в привычках взглядах. Том, чтобы ваш супруг. Испытывают трудности во взаимоотношениях члены молодой семьи начинают распределять обязанности, которые должен. Каждой из супругов стремится перевоспитать второго. Пять критических периодов, во взаимоотношениях обязанности которые.",
		"Обеспечены собственным жильем, процесс привыкания друг к у них менее продолжительный. Просто отдохнуть пространство, где он захочет. Спустя некоторое время после свадьбы у которых все замечательно, в этом. Достаточно часто осложнение семейного кризиса через определенные сроки совместной жизни заняться тем.",
		"Чувство влюбленности, которое овладевало ими раньше. Никому нельзя рассказывать совместной жизни идеальных семей. После свадьбы у молодых родителей ни для каждой из них менее продолжительный. Супругов стремится перевоспитать второго навязать. Пять критических периодов, во взаимоотношениях привычках, взглядах на жизнь, традициях и взаимные.",
		"Наиболее распространенных слов на основе оригинального трактата, благодаря чему появляется возможность. Который планируется использовать при запуске проекта цель. Появляется возможность получить более того. Считается, что впервые его применили. Слова, получив текст-рыбу, широко используемый и демонстрации внешнего. Вида контента, просмотра шрифтов, абзацев, отступов и демонстрации внешнего.",
		"Текст-рыбу, широко используемый и слова, получив текст-рыбу. Набор слов. запуске проекта есть специальные генераторы, создающие собственные варианты. Цель применения такого текста сыграет на название, не имеет никакого отношения. Имеется разница в различных языках. Веб-дизайнерами для вставки на сайтах и проектах, ориентированных на латыни и. Кроме того, нечитабельность текста исключительно демонстрационная, то и т.д создающие собственные варианты.",
		"Некоторые вопросы, связанные с разной частотой, имеется разница в длине наиболее. Иные буквы встречаются с языками, использующими латинский алфавит, могут возникнуть небольшие проблемы. Контент – написание символов на латыни и демонстрации внешнего вида контента просмотра. Появлением lorem лучше использовать в xvi веке текста на том языке. С языками, использующими латинский алфавит, могут возникнуть. Знает, что такое текст-рыба что такое текст-рыба написание символов на латыни.",
		"С использованием lorem связанные с разной частотой, имеется разница в книгопечатании. Ориентированных на сайтах и демонстрации внешнего вида контента, просмотра шрифтов. Вырвал отдельные фразы и на латыни и смысловую нагрузку ему нести. Чему появляется возможность получить более длинный неповторяющийся набор слов. к обитателям водоемов. Смысловую нагрузку ему нести совсем необязательно лучше использовать в качестве рыбы текст. То и демонстрации внешнего вида контента, просмотра шрифтов.",
		"Качестве рыбы текст на кириллице значительно различается символов на руку. Контента, просмотра шрифтов, абзацев, отступов и. Контент – написание символов на том языке, который планируется использовать. Неповторяющийся набор слов. то и проектах. Написание символов на основе оригинального трактата. Используется он веб-дизайнерами для вставки на название, не имеет. Латинский алфавит, могут возникнуть небольшие проблемы. Контента, просмотра шрифтов, абзацев, отступов и т.д имеет. Рыбы текст на интернет-страницы и.",
		"Неповторяющийся набор слов. распространенных слов контент – написание символов. Нечитабельность текста на основе оригинального трактата, благодаря чему. Те или иные буквы встречаются с разной частотой имеется. Появлением lorem возникнуть небольшие проблемы: в xvi веке. Применили в длине наиболее распространенных слов получив. Вида контента, просмотра шрифтов, абзацев, отступов и т.д еще. Знает, что такое текст-рыба самым известным рыбным текстом является знаменитый. Языках те или иные буквы встречаются с языками, использующими латинский алфавит.",
		"Смысловую нагрузку ему нести совсем необязательно. Появлением lorem текст на кириллический контент – написание символов. Благодаря чему появляется возможность получить более длинный неповторяющийся. Применили в xvi веке вставки на основе оригинального трактата благодаря. Для вставки на руку при запуске проекта. Языке, который планируется использовать при запуске проекта восприятия. Благодаря чему появляется возможность получить более длинный неповторяющийся набор слов. слова получив. Контент – написание символов на сайтах и смысловую нагрузку ему нести совсем. Сыграет на руку при оценке качества восприятия макета в различных.",
		"Неповторяющийся набор слов. текста на латыни. Так как цель применения такого текста исключительно демонстрационная, то и т.д ipsum. Наиболее распространенных слов xvi веке. В xvi веке контента просмотра. Оценке качества восприятия макета появляется возможность получить более длинный неповторяющийся набор. Знает, что такое текст-рыба именно из его применили. Отдельные фразы и проектах, ориентированных. В различных языках те. Просмотра шрифтов, абзацев, отступов и на сайтах и слова. Зла средневековый книгопечатник вырвал отдельные фразы и смысловую нагрузку. Набор слов. как цель применения такого текста на основе оригинального трактата благодаря.",
		"Контент – написание символов. Благодаря чему появляется возможность получить более длинный неповторяющийся набор слов.. Вопросы, связанные с разной частотой, имеется разница в качестве рыбы текст этот. Имеется разница в различных языках те или иные. Своим появлением lorem вставки на основе оригинального трактата, благодаря чему появляется. Более длинный неповторяющийся набор слов. трактата о пределах добра и демонстрации внешнего. Он веб-дизайнерами для вставки. Обязан древнеримскому философу цицерону, ведь именно. Веб-дизайнерами для вставки на интернет-страницы и по сей день. Сыграет на название, не имеет никакого отношения к обитателям водоемов ориентированных.",
		"Он веб-дизайнерами для вставки на сайтах. Все же лучше использовать при оценке качества восприятия макета демонстрации внешнего. Используется он веб-дизайнерами для вставки на кириллический контент. Сей день руку при оценке качества восприятия макета. Неповторяющийся набор слов. использующими латинский алфавит. Просмотра шрифтов, абзацев, отступов и т.д еще. Еще в различных языках те или иные. Имеет никакого отношения к обитателям водоемов. Обитателям водоемов вывод, что впервые. Веб-разработчик знает, что впервые его применили в длине наиболее распространенных слов. Возможность получить более длинный неповторяющийся набор слов. планируется использовать. Кириллический контент – написание символов на том языке, который планируется использовать.",
		"Интернет-страницы и слова, получив текст-рыбу, широко используемый и демонстрации внешнего вида контента. Используется он веб-дизайнерами для вставки на том языке. Качества восприятия макета xvi веке отдельные. Собственные варианты текста сыграет на интернет-страницы и т.д связанные. Так как цель применения такого. Небольшие проблемы: в книгопечатании еще. Контент – написание символов на название. На кириллице значительно различается для вставки. И т.д все же лучше использовать при оценке качества восприятия. Вида контента, просмотра шрифтов, абзацев, отступов и проектах, ориентированных на название. Так как цель применения такого. Ipsum, кроме того, нечитабельность текста сыграет. Отдельные фразы и демонстрации внешнего вида контента, просмотра шрифтов, абзацев отступов.",
		"Связанные с языками, использующими латинский алфавит, могут возникнуть небольшие проблемы: в. Демонстрации внешнего вида контента, просмотра шрифтов. Несмотря на интернет-страницы и демонстрации. Используется он веб-дизайнерами для вставки на сайтах и. Цель применения такого текста сыграет на том языке, который планируется использовать. Длинный неповторяющийся набор слов. сей день веб-дизайнерами для вставки на. Сыграет на основе оригинального трактата, благодаря чему появляется. В длине наиболее распространенных слов. Интернет-страницы и т.д различных языках. Возникнуть небольшие проблемы: в. Кроме того, есть специальные генераторы создающие. Фразы и даже с использованием lorem. Просмотра шрифтов, абзацев, отступов и смысловую нагрузку. Применили в длине наиболее распространенных слов несколько вариантов lorem.",
		"Far hello hardheadedly naturally accommodating much alas successfully cast ostrich far scratched less a and this towards less gosh guffawed Ветеринарное свидетельство, как справедливо считает Ф.Энгельс, применяет закрытый аквапарк. Код последовательно вращает интеллект. Поток иллюстрирует экситон.",
		"And feverishly literally inside more below together less tiger fish frowned much wrung unsociable hello truly macaw favorable far oh when far spread celestially through the wound decently. Показательный пример – отгонное животноводство волнообразно. Эриксоновский гипноз, в первом приближении, интуитивно понятен."
	)




	@Test
	fun testAllMessagesDeflateVSApacheText() {
		var apacheCounter = 0
		var deflateCounter = 0
		var GzipCounter = 0
		for (testString in testsStrings) {
			val testData = testString.toByteArray(TEXT_DEFAULT_CHARSET)

			//Apache
			// Compress
			val byteOutputApache = ByteArrayOutputStream()
			val outputApache = BZip2CompressorOutputStream(byteOutputApache)
			outputApache.write(testData)
			outputApache.close()

			// Decompress
			val byteInputApache = ByteArrayInputStream(byteOutputApache.toByteArray())
			val inputApache = BZip2CompressorInputStream(byteInputApache, false)
			val decodedTestDataApache = ByteArray(testData.size)
			inputApache.read(decodedTestDataApache, 0, decodedTestDataApache.size)

			//Deflater
			// Compress
			val byteOutput = ByteArrayOutputStream()
			val output = DeflaterOutputStream(byteOutput)
			output.write(testData)
			output.close()

			// Decompress
			val byteInput = ByteArrayInputStream(byteOutput.toByteArray())
			val input = InflaterInputStream(byteInput)
			val decodedTestData = ByteArray(testData.size)
			input.read(decodedTestData, 0, decodedTestData.size)

			//GZIPInputStream
			// Compress
			val byteOutputGZip = ByteArrayOutputStream()
			val outputGZip = GZIPOutputStream(byteOutputGZip)
			outputGZip.write(testData)
			outputGZip.close()

			// Decompress
			val byteInputGZip = ByteArrayInputStream(byteOutputGZip.toByteArray())
			val inputGZip = GZIPInputStream(byteInputGZip)
			val decodedTestDataGZip = ByteArray(testData.size)
			inputGZip.read(decodedTestDataGZip, 0, decodedTestDataGZip.size)


			println("-----------------------NEW ITERATION-------------------------")
			println("initial bytes size = ${testData.size}")
			printLog("Apache", testData.size, byteOutputApache.toByteArray().size)
			printLog("Deflate", testData.size, byteOutput.toByteArray().size)
			printLog("GZip", testData.size, byteOutputGZip.toByteArray().size)
			printVSLog(arrayOf("Apache", "Deflate", "GZip"),
						testData.size,
						arrayOf(byteOutputApache.toByteArray().size, byteOutput.toByteArray().size, byteOutputGZip.toByteArray().size),
						arrayOf({apacheCounter++}, {deflateCounter++}, {GzipCounter++}))

			// Compare
			assertArrayEquals(testData, decodedTestData)
			assertEquals(-1, input.read())
		}
		println("------------RESULT----------------")
		println("Apache won $apacheCounter times")
		println("Deflate won $deflateCounter times")
		println("GZip won $GzipCounter times")
	}

	private fun printLog(algoName: String, initialByteSize: Int, compressedBytesSize: Int) {
		println("---------------$algoName----------------")
		println("compressed bytes size = ${compressedBytesSize}")
		println("compressing result -> ${if (compressedBytesSize >= initialByteSize) "NO" else "YES"}")
		println("difference -> ${if (compressedBytesSize >= initialByteSize ) "PLUS" else "MINUS"} ${abs(initialByteSize - compressedBytesSize)}")
	}

	private fun printVSLog(algoNames: Array<String>, initialBytesSize: Int, compressedBytesSizes: Array<Int>, incrementFuns : Array<() -> Int>) {
		println("------------${algoNames.joinToString(" VS ")}----------------")
		val minimumElementIndex = findMinIndex(initialBytesSize, compressedBytesSizes)
		if (minimumElementIndex != null){
			val winner = algoNames[minimumElementIndex]
			val winnerDifference = abs(initialBytesSize - compressedBytesSizes[minimumElementIndex])
			val order = String.format("%.2f", initialBytesSize.toDouble()/compressedBytesSizes[minimumElementIndex].toDouble())
			incrementFuns[minimumElementIndex]()
			println("compressed bytes size WINNER IS $winner. Difference between initial size and compressed is $winnerDifference, what order is ${order}x")
		} else {
			println("All are LOOSERS!")
		}
	}

	private fun findMinIndex(initialBytesSize: Int, sizes: Array<Int>) : Int? {
		val min = sizes.min()
		return if (min != null)
			if (min <= initialBytesSize)
				sizes.withIndex().find { it.value == min }?.index
			else
				null
		else
			min
	}

}